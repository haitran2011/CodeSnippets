<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>vcc</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>@interface &lt;#VC#&gt; ()

@property (nonatomic, strong) UICollectionView *collectionView;
@property (nonatomic, strong) &lt;#ViewModelType#&gt; *viewModel;
@property (nonatomic, strong) &lt;#DataSourceType#&gt; *dataSource;
@property (nonatomic, strong) &lt;#DelegateType#&gt; *delegate;

@end

@implementation &lt;#VC#&gt;

- (void)dealloc {
    NSLog(@"%s", __FUNCTION__);
}

- (void)viewDidLoad {
    [super viewDidLoad];
    [self setupUserInterface];
    [self setupEventsBinding];
    [self.viewModel fetchData];
}

- (void)setupUserInterface {
    [self.view addSubview:self.collectionView];
    [self.collectionView makeConstraints:^(MASConstraintMaker *make) {
        make.edges.equalTo(self.view);
    }];
}

- (void)setupEventsBinding {
    self.collectionView.dataSource = self.dataSource;
    self.collectionView.delegate = self.delegate;
    
    @weakify(self);
    RACSignal *update = RACObserve(self.viewModel, globalDataMetric).rr_nonnull;
    RAC(self.dataSource, globalDataMetric) = update;
    [update.deliverOnMainThread subscribeNext:^(TCGlobalDataMetric * _Nullable x) {
        @strongify(self);
        [self.collectionView reloadData];
        [self.collectionView rr_didReloadDataWithNoMoreData:x.noMoreData];
    }];
    
    [RACObserve(self.viewModel, error).rr_nonnull.deliverOnMainThread subscribeNext:^(id  _Nullable x) {
        @strongify(self);
        [self.collectionView rr_endRefresh];
        [self ek_presentError:x];
    }];
    
    [self.collectionView rr_addInfinityScrollWithhandler:^(UIScrollView *scrollView) {
        @strongify(self);
        [self.viewModel fetchData];
    }];
    
    [self.collectionView rr_addPullToRefreshWithhandler:^(UIScrollView *scrollView) {
        @strongify(self);
        [self.viewModel refetchData];
    }];
}

- (&lt;#DelegateType#&gt; *)delegate {
    if (!_delegate) {
        _delegate = [[&lt;#DelegateType#&gt; alloc] initWithCollectionView:self.collectionView];
    }
    return _delegate;
}

- (&lt;#DataSourceType#&gt; *)dataSource {
    if (!_dataSource) {
        _dataSource = [[&lt;#DataSourceType#&gt; alloc] initWithCollectionView:self.collectionView];
    }
    return _dataSource;
}

- (&lt;#ViewModelType#&gt; *)viewModel {
    if (!_viewModel) {
        _viewModel = [&lt;#ViewModelType#&gt; new];
    }
    return _viewModel;
}

- (UICollectionView *)collectionView {
    if (!_collectionView) {
        UICollectionViewFlowLayout *layout = [UICollectionViewFlowLayout new];
        _collectionView = [[UICollectionView alloc] initWithFrame:CGRectZero collectionViewLayout:layout];
        _collectionView.backgroundColor = [UIColor whiteColor];
        _collectionView.showsHorizontalScrollIndicator = NO;
    }
    
    return _collectionView;
}

@end
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>1179FD83-C575-464B-BA5C-A5E33A7248CE</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetTitle</key>
	<string>UIViewController.m: based on UICollectionView file completion</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
