<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>dsc</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>TopLevel</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>import Foundation
import UIKit
import TinyCoordinator

final class &lt;#DataSource#&gt;: TCDataSource, TCDataSourceable {
    deinit {
        loggingPrint("")
    }
    
    func registerReusableCell() {
        collectionView.tc_registerReusableCell(class: &lt;#CollectionViewCell#&gt;.self)
    }
    
    func reusableCellIdentifier(for indexPath: IndexPath) -&gt; String {
        if let data = globalDataMetric.dataForItem(at: indexPath) {
            if data is &lt;#DataType#&gt; {
                return &lt;#CollectionViewCell#&gt;.reuseIdentifier
            } else if data is &lt;#DataType#&gt; {
                return &lt;#CollectionViewCell#&gt;.reuseIdentifier
            }
        }
        
        fatalError("Resuable cell identifier no provide for \(indexPath)")
    }
    
    func populateData(with data: TCDataType, forReusableCell cell: TCCellType) {
        if let reusableCell = cell as? TCReusableViewSupport {
            reusableCell.populate(data: data)
            
            // MARK: for iOS 10
            (cell as! UIView).setNeedsLayout()
            (cell as! UIView).layoutIfNeeded()
        }
    }
}
</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>EED90995-E51D-414B-B549-D3CC8E368FFA</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetTitle</key>
	<string>DataSource:  based on collection view file completion</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>0</integer>
</dict>
</plist>
